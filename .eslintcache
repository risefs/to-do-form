[{"C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\index.js":"1","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\App.js":"2","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\reportWebVitals.js":"3","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\firebase.js":"4","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\to-do-form\\ToDoForm.jsx":"5","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\to-do-form\\List.jsx":"6","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\to-do-form\\InputList.jsx":"7","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\login\\Login.jsx":"8","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\Modal.jsx":"9","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\login\\Register.jsx":"10","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\login\\hooks.js":"11"},{"size":522,"mtime":1612644283270,"results":"12","hashOfConfig":"13"},{"size":1945,"mtime":1614770885333,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611155585689,"results":"15","hashOfConfig":"13"},{"size":638,"mtime":1613775681090,"results":"16","hashOfConfig":"13"},{"size":2695,"mtime":1613688171248,"results":"17","hashOfConfig":"13"},{"size":2633,"mtime":1613686561234,"results":"18","hashOfConfig":"13"},{"size":2942,"mtime":1613687769874,"results":"19","hashOfConfig":"13"},{"size":1974,"mtime":1614340721760,"results":"20","hashOfConfig":"13"},{"size":1912,"mtime":1614294322439,"results":"21","hashOfConfig":"13"},{"size":1435,"mtime":1614340767404,"results":"22","hashOfConfig":"13"},{"size":717,"mtime":1614340617454,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"bkmypg",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\index.js",[],["51","52"],"C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\App.js",["53"],"import React, { useState,useEffect } from 'react';\nimport './App.css';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from \"react-toastify\";\n\nimport Login from './components/login/Login';\nimport ToDoForm from './components/to-do-form/ToDoForm';\nimport Modal from './components/Modal';\nimport Register from './components/login/Register';\n\nimport useSignUp from \"./components/login/hooks\";\n\n\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const { user, handleInputChange, handleSubmit,clearuser } = useSignUp();\n\n  const openModal = (e) => {\n    setIsOpen(!isOpen);\n    clearuser();\n  }\n\n  const handlerRegister =  () => {\n    handleSubmit('register').then( (response) => {\n      if( response.additionalUserInfo.isNewUser){\n        openModal(false);\n        toast(\"Register Successfull\", {\n          type: \"success\",\n        });\n      }\n    });\n  }\n\n  useEffect(() => {\n    console.log('entro aca');\n  })\n\n  return (\n    <>\n      {isLogin ?\n        <div className=\"flex flex-col justify-center min-h-screen\">\n          <ToDoForm />\n        </div>\n        :\n        <div>\n          <div className=\"flex flex-col justify-center min-h-screen\" style={{ backgroundImage: \"url(/loginFondo.jpg)\" }}>\n            <Login \n            openModal={openModal}\n            isOpen={isOpen}\n            />\n            {isOpen ?\n              <Modal\n                buttons={[{ name: \"Create\", type: \"primary\", action:handlerRegister }]}\n                openModal={openModal}\n                isOpen={isOpen}\n              >\n                <Register \n                  user={user}\n                  handleInputChange={handleInputChange}\n                />\n              </Modal>\n              :\n              null\n            }\n          </div>\n        </div>\n      }\n      <ToastContainer />\n    </>\n  );\n}\nexport default App;\n","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\reportWebVitals.js",[],"C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\firebase.js",[],"C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\to-do-form\\ToDoForm.jsx",[],"C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\to-do-form\\List.jsx",[],"C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\to-do-form\\InputList.jsx",["54"],"import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../../firebase\";\r\n\r\nconst InputList = (props) => {\r\n  const [data, setData] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    language: \"\",\r\n    level: \"\",\r\n  });\r\n\r\n  const { saveRecord,setRecord,record,setIsAdd,isAdd } = props;\r\n\r\n  const handlerChange = (event) => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setData({\r\n      name: \"\",\r\n      language: \"\",\r\n      level: \"\",\r\n    });\r\n    setRecord(data);\r\n  };\r\n\r\n  const handlerSubmit = (event) => {\r\n    event.preventDefault();\r\n    saveRecord(data);\r\n    clearForm();\r\n  };\r\n\r\n  const getRecord = async (id) => {\r\n    const collection = await db.collection(\"list\").doc(id);\r\n    collection.get().then( record => {\r\n      setData(record.data());\r\n    } );\r\n  }\r\n\r\n  const style = {\r\n    input: \"p-1 ml-3 bg-blue-100 rounded-md\",\r\n    button: \"rounded-sm bg-green-500 p-2 m-2 text-white w-2/4 border-none\",\r\n    label: \"font-bold text-md p-4\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(!record.id){\r\n      clearForm();\r\n    }else{\r\n      // setData(props.record);\r\n      getRecord(record.id);\r\n      setIsAdd(false);\r\n    }\r\n  }, [record.id]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handlerSubmit}>\r\n        <div>\r\n          <div className=\"container p-2\">\r\n            <label className={style.label}>Name</label>\r\n            <br />\r\n            <input\r\n              onChange={handlerChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={data.name}\r\n              className={style.input}\r\n            />\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <label className={style.label}>Language</label>\r\n            <br />\r\n            <input\r\n              onChange={handlerChange}\r\n              type=\"text\"\r\n              name=\"language\"\r\n              value={data.language}\r\n              className={style.input}\r\n            />\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <label className={style.label}>Level</label>\r\n            <br />\r\n            <select\r\n              onChange={handlerChange}\r\n              name=\"level\"\r\n              id=\"level\"\r\n              value={data.level}\r\n              className={style.input}\r\n            >\r\n              <option value=\"\">- Select a value -</option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"container p-2 text-center\">\r\n            <button className={style.button} type=\"submit\">\r\n              {\r\n                isAdd ? 'Add' : 'Update' \r\n              }\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputList;\r\n",["55","56"],"C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\login\\Login.jsx",[],"C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\Modal.jsx",[],"C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\login\\Register.jsx",["57","58"],"import React from \"react\";\r\nimport useSignUp from \"./hooks\";\r\nimport {useEffect} from \"react\";\r\n\r\nconst Register = (props) => {\r\n\r\n    const style = {\r\n        input: \"p-1  bg-blue-100 rounded-md w-full\",\r\n        button:\"rounded-sm bg-red-500 p-2 m-2 text-white w-2/4 border-none hover:bg-red-700 rounded-md\",\r\n        buttonSecundary:\"rounded-sm bg-blue-500 p-2 m-2 text-white w-2/4 border-none hover:bg-blue-700 rounded-md\",\r\n        label: \"font-bold text-md p-4\",\r\n      };\r\n      const { user, handleInputChange } = props;\r\n\r\n  return (\r\n    <div className=\"box-content self-center w-full\">\r\n        <div className=\"text-2xl font-medium p-4\">\r\n            Register\r\n        </div>\r\n        <div className=\"shadow-2xl box-content self-center w-auto  p-2\">\r\n          <div className=\"p-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              className={style.input}\r\n              placeholder=\"Email\"\r\n              value={user.email || \"\"}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"p-4\">\r\n            <input\r\n              name=\"password\"\r\n              type=\"text\"\r\n              className={style.input}\r\n              placeholder=\"Password\"\r\n              value={user.password || \"\"}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n","C:\\Users\\risequei\\Desktop\\React\\to-do-form\\src\\components\\login\\hooks.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":17,"column":19,"nodeType":"65","messageId":"66","endLine":17,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":57,"column":6,"nodeType":"69","endLine":57,"endColumn":17,"suggestions":"70"},{"ruleId":"59","replacedBy":"71"},{"ruleId":"61","replacedBy":"72"},{"ruleId":"63","severity":1,"message":"73","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":17},{"ruleId":"63","severity":1,"message":"74","line":3,"column":9,"nodeType":"65","messageId":"66","endLine":3,"endColumn":18},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'setIsLogin' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clearForm' and 'setIsAdd'. Either include them or remove the dependency array.","ArrayExpression",["77"],["75"],["76"],"'useSignUp' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [clearForm, record.id, setIsAdd]",{"range":"80","text":"81"},[1237,1248],"[clearForm, record.id, setIsAdd]"]